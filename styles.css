/* CSS Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    font-size: 16px;
    line-height: 1.5;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: #333;
    min-height: 100vh;
    padding: 1rem 0;
}

/* Layout */
.container {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 1rem;
}

.header {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 2.5rem;
    margin-bottom: 2rem;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.header:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
}

.header h1 {
    font-size: 2.5rem;
    font-weight: 700;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 1.5rem;
    text-align: center;
    letter-spacing: -0.02em;
}

/* Add Task Form */
.add-task-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.input-group {
    display: flex;
    gap: 0.75rem;
    align-items: stretch;
}

.task-input {
    flex: 1;
    padding: 1rem 1.25rem;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 12px;
    font-size: 1rem;
    background: rgba(255, 255, 255, 0.9);
    transition: all 0.3s ease;
    font-family: inherit;
}

.task-input:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.15);
    background: rgba(255, 255, 255, 1);
    transform: translateY(-1px);
}

.task-input::placeholder {
    color: #6c757d;
    opacity: 0.8;
}

.add-button {
    padding: 1rem 2rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    border-radius: 12px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
    min-width: 120px;
}

.add-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
    background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
}

.add-button:active {
    transform: translateY(0);
    box-shadow: 0 2px 10px rgba(102, 126, 234, 0.3);
}

/* Error Message */
.error-message {
    font-size: 0.875rem;
    min-height: 1.25rem;
    display: flex;
    align-items: center;
    font-weight: 500;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    transition: all 0.3s ease;
    margin-top: 0.5rem;
}

.error-message:empty {
    display: none;
}

/* Error type variations */
.error-message.error-error {
    color: #e74c3c;
    background: rgba(231, 76, 60, 0.1);
    border-left: 4px solid #e74c3c;
}

.error-message.error-warning {
    color: #f39c12;
    background: rgba(243, 156, 18, 0.1);
    border-left: 4px solid #f39c12;
}

.error-message.error-info {
    color: #3498db;
    background: rgba(52, 152, 219, 0.1);
    border-left: 4px solid #3498db;
}

/* Error message icons */
.error-message.error-error::before {
    content: '‚ö†Ô∏è';
    margin-right: 0.5rem;
}

.error-message.error-warning::before {
    content: '‚ö†Ô∏è';
    margin-right: 0.5rem;
}

.error-message.error-info::before {
    content: '‚ÑπÔ∏è';
    margin-right: 0.5rem;
}

/* Enhanced error message animations */
.error-message {
    animation: slideInDown 0.3s ease-out;
}

@keyframes slideInDown {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Critical error overlay */
.critical-error-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
    backdrop-filter: blur(5px);
}

.critical-error-message {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    max-width: 500px;
    text-align: center;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    border: 2px solid #e74c3c;
}

.critical-error-message h2 {
    color: #e74c3c;
    margin-bottom: 1rem;
    font-size: 1.5rem;
}

.critical-error-message p {
    color: #333;
    margin-bottom: 1.5rem;
    line-height: 1.5;
}

.critical-error-message button {
    background: #e74c3c;
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600;
    transition: background 0.3s ease;
}

.critical-error-message button:hover {
    background: #c0392b;
}

/* Main Content */
.main-content {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 2.5rem;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.main-content:hover {
    transform: translateY(-1px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
}

/* Task List */
.task-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.task-item {
    display: flex;
    align-items: center;
    padding: 1.25rem;
    background: rgba(255, 255, 255, 0.98);
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 12px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    backdrop-filter: blur(5px);
    position: relative;
    overflow: hidden;
}

.task-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
    transform: scaleX(0);
    transition: transform 0.3s ease;
}

.task-item:hover {
    background: rgba(255, 255, 255, 0.95);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    border-color: rgba(102, 126, 234, 0.3);
}

.task-item:hover::before {
    transform: scaleX(1);
}

.task-checkbox {
    margin-right: 1.25rem;
    width: 1.5rem;
    height: 1.5rem;
    cursor: pointer;
    accent-color: #667eea;
    transition: transform 0.2s ease;
}

.task-checkbox:hover {
    transform: scale(1.1);
}

.task-text {
    flex: 1;
    font-size: 1.1rem;
    line-height: 1.5;
    font-weight: 700;
    color: #000000;
    text-shadow: 0 0 1px rgba(255, 255, 255, 0.8);
    transition: all 0.3s ease;
}

/* Completed Task Styling */
.task-item.completed {
    background: rgba(236, 240, 241, 0.8);
    border-color: rgba(149, 165, 166, 0.3);
    opacity: 0.8;
}

.task-item.completed::before {
    background: linear-gradient(90deg, #95a5a6 0%, #7f8c8d 100%);
    transform: scaleX(1);
}

.task-item.completed .task-text {
    text-decoration: line-through;
    color: #7f8c8d;
    opacity: 0.7;
}

.task-item.completed:hover {
    opacity: 1;
    background: rgba(236, 240, 241, 0.95);
}

.delete-button {
    background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
    color: white;
    border: none;
    border-radius: 8px;
    padding: 0.6rem 1rem;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(231, 76, 60, 0.3);
    min-width: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.delete-button:hover {
    background: linear-gradient(135deg, #c0392b 0%, #a93226 100%);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(231, 76, 60, 0.4);
}

.delete-button:active {
    transform: translateY(0);
    box-shadow: 0 2px 6px rgba(231, 76, 60, 0.3);
}

/* Empty State */
.empty-state {
    text-align: center;
    padding: 4rem 2rem;
    color: #7f8c8d;
    background: rgba(255, 255, 255, 0.5);
    border-radius: 12px;
    border: 2px dashed rgba(127, 140, 141, 0.3);
    transition: all 0.3s ease;
}

.empty-state:hover {
    background: rgba(255, 255, 255, 0.7);
    border-color: rgba(127, 140, 141, 0.5);
}

.empty-state p {
    font-size: 1.25rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
}

.empty-state::before {
    content: 'üìù';
    display: block;
    font-size: 3rem;
    margin-bottom: 1rem;
    opacity: 0.6;
}

/* Hidden utility class */
.hidden {
    display: none !important;
}

/* Loading states and animations */
.task-item.adding {
    animation: slideInUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.task-item.removing {
    animation: slideOutRight 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(20px) scale(0.95);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

@keyframes slideOutRight {
    from {
        opacity: 1;
        transform: translateX(0) scale(1);
        max-height: 100px;
        margin-bottom: 1rem;
    }
    to {
        opacity: 0;
        transform: translateX(100px) scale(0.8);
        max-height: 0;
        margin-bottom: 0;
        padding-top: 0;
        padding-bottom: 0;
    }
}

/* Checkbox custom styling */
.task-checkbox {
    appearance: none;
    -webkit-appearance: none;
    background: rgba(255, 255, 255, 0.9);
    border: 2px solid #ddd;
    border-radius: 6px;
    position: relative;
    transition: all 0.3s ease;
}

.task-checkbox:checked {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-color: #667eea;
}

.task-checkbox:checked::after {
    content: '‚úì';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 0.9rem;
    font-weight: bold;
}

.task-checkbox:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.3);
}

/* Performance optimization: Use transform for animations instead of layout properties */
.task-item.completing .task-text {
    animation: strikeThrough 0.6s ease-in-out forwards;
}

@keyframes strikeThrough {
    0% {
        text-decoration: none;
        opacity: 1;
        transform: scale(1);
    }
    50% {
        text-decoration: line-through;
        opacity: 0.8;
        transform: scale(0.98);
    }
    100% {
        text-decoration: line-through;
        opacity: 0.7;
        color: #7f8c8d;
        transform: scale(1);
    }
}

/* Performance optimization: Optimize large list rendering */
.task-list {
    /* Enable hardware acceleration for scrolling */
    transform: translateZ(0);
    /* Optimize for large lists */
    contain: layout style paint;
}

/* Performance optimization: Reduce repaints during animations */
.task-item.adding,
.task-item.removing {
    contain: layout style paint;
}

/* Improved focus styles for accessibility */
.add-button:focus,
.delete-button:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.4);
}

.task-input:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.15);
}

/* Performance optimization: Use transform and opacity for better performance */
button, input, .task-item {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
                opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1),
                box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform, opacity;
}

/* Performance optimization: Use GPU acceleration for animations */
.task-item:hover,
.add-button:hover,
.delete-button:hover {
    transform: translateZ(0); /* Force GPU acceleration */
}

/* Delete feedback message */
.delete-feedback {
    position: fixed;
    top: 20px;
    right: 20px;
    background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
    color: white;
    padding: 1rem 1.5rem;
    border-radius: 12px;
    box-shadow: 0 8px 25px rgba(39, 174, 96, 0.3);
    font-size: 0.9rem;
    font-weight: 600;
    z-index: 1000;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    animation: slideInRight 0.4s cubic-bezier(0.4, 0, 0.2, 1), fadeOut 0.5s ease-in 2.5s forwards;
}

@keyframes slideInRight {
    from {
        transform: translateX(100%) scale(0.8);
        opacity: 0;
    }
    to {
        transform: translateX(0) scale(1);
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
        transform: translateX(0) scale(1);
    }
    to {
        opacity: 0;
        transform: translateX(20px) scale(0.95);
    }
}

/* Responsive Design */
@media (max-width: 768px) {
    body {
        padding: 0.5rem 0;
    }
    
    .container {
        padding: 1rem 0.75rem;
    }
    
    .header, .main-content {
        padding: 2rem 1.5rem;
        margin-bottom: 1.5rem;
    }
    
    .header h1 {
        font-size: 2rem;
        margin-bottom: 1.25rem;
    }
    
    .input-group {
        flex-direction: column;
        gap: 1rem;
    }
    
    .add-button {
        width: 100%;
        padding: 1.25rem 2rem;
    }
    
    .task-item {
        padding: 1rem;
        flex-wrap: wrap;
        gap: 0.75rem;
    }
    
    .task-text {
        font-size: 1rem;
        flex-basis: 100%;
        order: 2;
    }
    
    .task-checkbox {
        order: 1;
        margin-right: 0;
    }
    
    .delete-button {
        order: 3;
        margin-left: auto;
    }
    
    .empty-state {
        padding: 3rem 1.5rem;
    }
    
    .empty-state::before {
        font-size: 2.5rem;
    }
}

@media (max-width: 480px) {
    .container {
        padding: 0.75rem 0.5rem;
    }
    
    .header, .main-content {
        padding: 1.5rem 1rem;
        border-radius: 12px;
    }
    
    .header h1 {
        font-size: 1.75rem;
    }
    
    .task-input {
        padding: 1rem;
        font-size: 0.95rem;
    }
    
    .add-button {
        padding: 1rem 1.5rem;
        font-size: 0.95rem;
    }
    
    .task-item {
        padding: 0.875rem;
    }
    
    .task-text {
        font-size: 0.95rem;
    }
    
    .delete-button {
        padding: 0.5rem 0.75rem;
        font-size: 1rem;
    }
    
    .empty-state {
        padding: 2.5rem 1rem;
    }
    
    .empty-state p {
        font-size: 1.1rem;
    }
    
    .delete-feedback {
        top: 10px;
        right: 10px;
        left: 10px;
        padding: 0.875rem 1.25rem;
        font-size: 0.85rem;
    }
}

/* Focus and accessibility improvements */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
    .task-item {
        border-width: 3px;
        border-color: #000;
    }
    
    .task-item.completed {
        border-color: #666;
    }
    
    .header, .main-content {
        border: 2px solid #000;
    }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
    body {
        background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
    }
    
    .header, .main-content {
        background: rgba(52, 73, 94, 0.95);
        border-color: rgba(255, 255, 255, 0.1);
        color: #ecf0f1;
    }
    
    .header h1 {
        background: linear-gradient(135deg, #3498db 0%, #9b59b6 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
    
    .task-input {
        background: rgba(52, 73, 94, 0.8);
        border-color: rgba(255, 255, 255, 0.2);
        color: #ecf0f1;
    }
    
    .task-input::placeholder {
        color: #bdc3c7;
    }
    
    .task-item {
        background: rgba(52, 73, 94, 0.6);
        border-color: rgba(255, 255, 255, 0.1);
        color: #ecf0f1;
    }
    
    .task-item:hover {
        background: rgba(52, 73, 94, 0.8);
    }
    
    .task-item.completed {
        background: rgba(44, 62, 80, 0.6);
        color: #95a5a6;
    }
    
    .empty-state {
        background: rgba(52, 73, 94, 0.3);
        border-color: rgba(255, 255, 255, 0.2);
        color: #bdc3c7;
    }
}